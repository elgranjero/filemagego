/*
FileMage Gateway

FileMage Gateway provides a simple API to configure storage endpoints, users, and keys. Please note that all urls must end in a trailing slash, and the Content-Type header must be set to application/json.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filemagego

import (
	"encoding/json"
)

// checks if the EndpointCreated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointCreated{}

// EndpointCreated struct for EndpointCreated
type EndpointCreated struct {
	// The ID of the created endpoint.
	Id *int32 `json:"id,omitempty"`
}

// NewEndpointCreated instantiates a new EndpointCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointCreated() *EndpointCreated {
	this := EndpointCreated{}
	return &this
}

// NewEndpointCreatedWithDefaults instantiates a new EndpointCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointCreatedWithDefaults() *EndpointCreated {
	this := EndpointCreated{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EndpointCreated) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointCreated) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EndpointCreated) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EndpointCreated) SetId(v int32) {
	o.Id = &v
}

func (o EndpointCreated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointCreated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableEndpointCreated struct {
	value *EndpointCreated
	isSet bool
}

func (v NullableEndpointCreated) Get() *EndpointCreated {
	return v.value
}

func (v *NullableEndpointCreated) Set(val *EndpointCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointCreated(val *EndpointCreated) *NullableEndpointCreated {
	return &NullableEndpointCreated{value: val, isSet: true}
}

func (v NullableEndpointCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


